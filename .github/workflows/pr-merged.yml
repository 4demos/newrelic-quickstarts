name: Update quickstarts

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  generate-uuid:
    name: Generate UUID
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          ref: 'main'
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: cd utils && yarn install

      - name: Generate UUIDs for quickstarts
        id: generate-uuids
        run: cd utils && yarn generate-uuids

      - name: Commit changes
        id: commit-changes
        run: |
          git config --local user.email "${{ env.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.THIRD_PARTY_GIT_AUTHOR_NAME }}"
          git add ./quickstarts/*
          git diff-index --quiet HEAD ./quickstarts/* || git commit -m 'chore: generate UUID(s) [skip ci]'
          echo "::set-output name=commit::true"

      - name: Temporarily disable branch protections
        id: disable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: null,
              restrictions: null,
              enforce_admins: null,
              required_pull_request_reviews: null
            })
            console.log("Result:", result)

      - name: Push Commit
        if: steps.commit-changes.outputs.commit == 'true'
        run: git push origin HEAD

      - name: Re-enable branch protections
        id: enable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: []
              },
              restrictions: {
                "users":[],
                "teams":[],
                "apps":[]
              },
              enforce_admins: null,
              required_pull_request_reviews: {
                dismiss_stale_reviews: true,
                required_approving_review_count: 1,
                dismissal_restrictions: {
                  users: [],
                  teams: []
                }
              }
            })
            console.log("Result:", result)

  submit-install-plans:
    name: Submit install plans
    needs: [generate-uuid]
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        # Ensure we have the most recent commit to `main`
        with:
          ref: "main"
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: cd utils && yarn install
      - name: Run update script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NR_API_URL: "https://staging-api.newrelic.com/graphql"
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_STAGING }}
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
          DRY_RUN=false
          cd utils && yarn create-validate-install-plans $URL $DRY_RUN

  submit-quickstarts:
    name: Submit quickstarts
    needs: [generate-uuid, submit-install-plans]
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        # Ensure we have the most recent commit to `main`
        with:
          ref: "main"
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: cd utils && yarn install
      - name: Run update script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NR_API_URL: "https://staging-api.newrelic.com/graphql"
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_STAGING }}
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
          DRY_RUN=false
          cd utils && yarn create-validate-pr-quickstarts $URL $DRY_RUN
