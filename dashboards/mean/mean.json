{
  "name": "MEAN",
  "description": null,
  "pages": [
    {
      "name": "Overview",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![Angular](https://angular.io/assets/images/logos/angular/angular.svg)\n"
          }
        },
        {
          "title": "",
          "layout": {
            "column": 2,
            "row": 1,
            "width": 11,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Web Monitoring \n\nUse the New Relic browser monitoring Angular agent to get deep visibility and actionable insights into real users' experiences on the website."
          }
        },
        {
          "title": "Initial Page Load and Route Change",
          "layout": {
            "column": 1,
            "row": 2,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT percentile(duration, 50) FROM BrowserInteraction WHERE (`mobileOptimized` IS NULL) AND (category IN ('Initial page load', 'Route change')) LIMIT 1000 FACET CASES (WHERE category LIKE '%Initial page load%' AS 'Initial page load (Window load + AJAX)', WHERE category LIKE '%Route change%' AS 'Route change') TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Page Response Time",
          "layout": {
            "column": 4,
            "row": 2,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT percentile(firstInputDelay, 75) FROM PageViewTiming WHERE (firstInteraction < 300) FACET `pageUrl` LIMIT 10"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Ajax Request",
          "layout": {
            "column": 8,
            "row": 2,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(*) AS 'HTTP Request' FROM AjaxRequest TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "User-Centric Page Load Times",
          "layout": {
            "column": 11,
            "row": 2,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT percentile(firstPaint, 50), percentile(firstContentfulPaint, 50), percentile(largestContentfulPaint, 50), percentile(windowLoad, 50), percentile(firstInteraction, 50) FROM PageViewTiming LIMIT 1000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![ExpressJS](https://raw.githubusercontent.com/Avenge-PRC777/chat-app-client-server/master/images/express.png)\n"
          }
        },
        {
          "title": "",
          "layout": {
            "column": 2,
            "row": 5,
            "width": 11,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Transaction Information\n\nYou can track the detailed information of all connection requests received by the backend server using New Relic agents."
          }
        },
        {
          "title": "Top 10 Transactions",
          "layout": {
            "column": 1,
            "row": 6,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(*) FROM Transaction WHERE (transactionType LIKE '%Web%' AND transactionSubType LIKE '%Expressjs%') EXTRAPOLATE FACET name LIMIT 10"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Web Transactions Time",
          "layout": {
            "column": 4,
            "row": 6,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(average(apm.service.overview.web * 1000), WHERE segmentName like '%Node.js%') as 'Node.js',filter(average(apm.service.overview.web * 1000), WHERE segmentName like '%MongoDB%') as 'MongoDB' FROM Metric LIMIT MAX TIMESERIES "
              },
              {
                "accountId": 0,
                "query": "SELECT average(apm.service.transaction.duration * 1000) AS 'Response time' FROM Metric WHERE (appName LIKE '%mean%') AND (transactionType LIKE '%Web%') LIMIT MAX TIMESERIES "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transaction Error",
          "layout": {
            "column": 7,
            "row": 6,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(*) FROM TransactionError TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Login Frequencies",
          "layout": {
            "column": 10,
            "row": 6,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT apdex(newrelic.timeslice.value) AS `Apdex/Expressjs/POST//user/login` FROM Metric WHERE metricTimesliceName LIKE 'Apdex/Expressjs/POST//user/login' AND appName LIKE '%mean%' TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 9,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![mongodb](https://res.cloudinary.com/hevo/image/upload/f_auto,q_auto/v1626694700/hevo-blog/MongoDB-sm-logo-500x400-1-1.gif)\n"
          }
        },
        {
          "title": "",
          "layout": {
            "column": 2,
            "row": 9,
            "width": 11,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Database Monitoring\n\nUsing the New Relic MongoDB agent, you have the ability to understand database operations, connections, errors and indexes.\n\n"
          }
        },
        {
          "title": "Opcounters",
          "layout": {
            "column": 1,
            "row": 10,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(mongo.mongod.opcounts.commandPerSecond) As 'command per second', latest(mongo.mongod.opcounts.deletePerSecond)  As 'delete per second', latest(mongo.mongod.opcounts.queryPerSecond)  As 'query per second', latest(mongo.mongod.opcounts.getmorePerSecond)  As 'get more per second', latest(mongo.mongod.opcounts.insertPerSecond)  As 'insert per second', LATEST(mongo.mongod.opcounts.updatePerSecond)  As 'update per second' TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Database Size (megabytes)",
          "layout": {
            "column": 4,
            "row": 10,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(`mongo.database.dataInBytes`)/1024 AS `Size in MB` FROM Metric FACET entity.name LIMIT 1000 TIMESERIES "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Connections",
          "layout": {
            "column": 7,
            "row": 10,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(mongo.mongod.connections.available) As 'Available Connections', latest(mongo.mongod.connections.current) As 'Current Connections', latest(mongo.mongod.connections.totalCreated) As 'Created Connections'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Operations",
          "layout": {
            "column": 9,
            "row": 10,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(mongo.mongod.operation.scanAndOrderPerSecond) As 'Scan & Order/second', latest(mongo.mongod.operation.writeConflictsPerSecond) As 'Write Conflicts/second'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Database Indexes",
          "layout": {
            "column": 11,
            "row": 10,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT count(mongo.index) as 'Total Scanned', average(mongo.index.accesses) as 'Average Accesses', average(mongo.index.sizeInBytes)/1024 as 'Average size (megabytes)'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 13,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![NodeJS](https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Node.js_logo.svg/2560px-Node.js_logo.svg.png)\n"
          }
        },
        {
          "title": "",
          "layout": {
            "column": 2,
            "row": 13,
            "width": 11,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Infrastructure and Application Monitoring\n\nTrace the host related information at real-time using New Relic NodeJS Agent. Your entire application can be observed, whether it is running in the cloud or on dedicated servers or in containers."
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 1,
            "row": 14,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(average(newrelic.timeslice.value) * 1000 * 1000, where metricTimesliceName LIKE 'Memory/NonHeap/Used') as 'Non-Heap', filter(average(newrelic.timeslice.value) * 1000 * 1000, where metricTimesliceName LIKE 'Memory/Heap/Used') as 'V8 Heap (used)', filter(average(newrelic.timeslice.value) * 1000 * 1000, where metricTimesliceName LIKE 'Memory/Heap/Free') as 'V8 Heap (free)' FROM Metric WHERE (appName LIKE '%mean%') TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "CPU Utilization",
          "layout": {
            "column": 4,
            "row": 14,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(rate(sum(newrelic.timeslice.value), 1 second), where metricTimesliceName LIKE 'CPU/System Time') as 'System', filter(rate(sum(newrelic.timeslice.value), 1 second), where metricTimesliceName LIKE 'CPU/User Time') as 'User' FROM Metric WHERE (appName LIKE '%mean%') TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Event Loop",
          "layout": {
            "column": 7,
            "row": 14,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(count(newrelic.timeslice.value), where metricTimesliceName LIKE 'Nodejs/EventLoop/CPU/Usage') as 'Ticks Per Minute' FROM Metric WHERE appName LIKE '%mean%' TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "GC Pause Time",
          "layout": {
            "column": 10,
            "row": 14,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(newrelic.timeslice.value) * 1000 as 'Average', max(newrelic.timeslice.value) * 1000 as 'Max', rate(sum(newrelic.timeslice.value), 1 minute) * 1000 as 'Total Time Per Minute' FROM Metric WHERE appName LIKE '%mean%' and metricTimesliceName LIKE 'GC/System/Pauses' TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        }
      ]
    },
    {
      "name": "Alerts",
      "description": null,
      "widgets": [
        {
          "title": "FCP (First Contentful Paint)",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT percentile(firstContentfulPaint, 75) As '' FROM PageViewTiming LIMIT 1000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 3
              },
              {
                "alertSeverity": "WARNING",
                "value": 2
              }
            ]
          }
        },
        {
          "title": "Transaction Error",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(*) As '' FROM TransactionError"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 10
              },
              {
                "alertSeverity": "WARNING",
                "value": 5
              }
            ]
          }
        },
        {
          "title": "Average Connections",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT average(mongo.mongod.connections.totalCreated) As ''"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 2000
              },
              {
                "alertSeverity": "WARNING",
                "value": 1000
              }
            ]
          }
        },
        {
          "title": "High Memory Usage",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(memoryUsedBytes/memoryTotalBytes) * 100 as '' FROM SystemSample"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 90
              },
              {
                "alertSeverity": "WARNING",
                "value": 85
              }
            ]
          }
        }
      ]
    }
  ],
  "variables": []
}
