{
  "name": "CockroachDB (Prometheus)",
  "description": null,
  "pages": [
    {
      "name": "Storage",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 2,
            "height": 8
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![CockroachDB Logo](https://raw.githubusercontent.com/newrelic/newrelic-quickstarts/main/quickstarts/cockroach-db/logo.png) \n- - -\n\n\n### Overview\n\n[CockroacDB](https://github.com/cockroachdb/cockroach) is a distributed SQL database built on a transactional and strongly-consistent key-value store. It scales horizontally; survives disk, machine, rack, and even datacenter failures with minimal latency disruption and no manual intervention; supports strongly-consistent ACID transactions; and provides a familiar SQL API for structuring, manipulating, and querying data.\n\n[CockroacDB](https://github.com/cockroachdb/cockroach) generates detailed time series metrics for each node in a cluster. This [page](https://www.cockroachlabs.com/docs/stable/monitor-cockroachdb-with-prometheus.html) shows you how to pull these metrics into Prometheus.\n\n---\n\n### About this Dashboard\n\nThis dashboard is based on metrics sent to New Relic using [Prometheus Agent or Prometheus Server.](https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/get-started/send-prometheus-metric-data-new-relic/)\n\nFor information on the prerequisites for this dashboard, please visit [our documentation here.](https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/integrations-list/cockroach-db-integration)"
          }
        },
        {
          "title": "Active Instances",
          "layout": {
            "column": 3,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric \nSELECT latest(liveness_livenodes) as 'Active Instances'\nWHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) compare WITH 24 hour ago Facet prometheus_server"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Capacity",
          "layout": {
            "column": 6,
            "row": 1,
            "width": 4,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT  sum(`Max_capacity`) As 'Max Capacity', ((average(`Max_capacity`) * cardinality(`Max_capacity`)) - (average(`Available_capacity`) * cardinality(`Available_capacity`))) As 'Used Capacity' ,  sum(`Available_capacity`) As 'Avaliable Capacity' FROM (SELECT (average(capacity) * cardinality(capacity)) AS `Max_capacity`, (average(capacity_available) * cardinality(capacity_available)) AS `Available_capacity` FROM Metric  WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}}) ) FACET ({{dimensions}})"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "File Descriptors",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`sys_fd_open_number`) * cardinality(`sys_fd_open_number`)) As 'Open(Avg)', sum(sys_fd_softlimit_number) AS 'Soft Limit' FROM (SELECT (average(sys_fd_open) * cardinality(sys_fd_open)) AS `sys_fd_open_number`,  (average(sys_fd_softlimit) * cardinality(sys_fd_softlimit)) AS `sys_fd_softlimit_number` FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}}) ) FACET ({{dimensions}})"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "SSTables",
          "layout": {
            "column": 3,
            "row": 3,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(rocksdb_num_sstables) * cardinality(rocksdb_num_sstables)) FROM Metric WHERE   (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance) TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Compactions ( Written Bytes)",
          "layout": {
            "column": 8,
            "row": 3,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT  latest(rocksdb_compactions) As 'Compactions'  FROM Metric WHERE   (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Log Commit Latency: percentile",
          "layout": {
            "column": 3,
            "row": 6,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT bucketpercentile(raft_process_logcommit_latency_bucket,{{percentile}})/1000000 FROM Metric WHERE   (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)   TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "MS"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Command Commit Latency: percentile",
          "layout": {
            "column": 8,
            "row": 6,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT bucketpercentile(raft_process_commandcommit_latency_bucket, {{percentile}}) / 1000000  FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "seriesOverrides": [
                {
                  "seriesName": "cluster=my-cockroachdb-cluster,instance=localhost:8080,instrumentation.name=remote-write,instrumentation.provider=prometheus,instrumentation.source=nginx-cockroachDb-Growth,instrumentation.version=0.0.2,job=cockroachdb,newrelic.source=prometheusAPI,prometheus_server=nginx-cockroachDb-Growth,store=1"
                }
              ],
              "unit": "MS"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Flushes (Writen Bytes) ",
          "layout": {
            "column": 1,
            "row": 9,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(rocksdb_flushes) As Flushes FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  TIMESERIES 300000 slide by 30000 "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Read Amplification(factor) ",
          "layout": {
            "column": 5,
            "row": 9,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(`average number of real read operations`) FROM (SELECT average(rocksdb_read_amplification) AS `average number of real read operations` FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}}) LIMIT 100 TIMESERIES 30000 slide by 30 seconds) FACET ({{dimensions}})  TIMESERIES "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Live Bytes ",
          "layout": {
            "column": 9,
            "row": 9,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(livebytes) AS `Live` FROM Metric  WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance) TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 12,
            "width": 12,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Timeseries Writes"
          }
        },
        {
          "title": "Bytes Written (KiB)",
          "layout": {
            "column": 1,
            "row": 13,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(timeseries_write_bytes)/1000, 1 SECONDS) As 'Bytes Written (KBs)' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  TIMESERIES 300000 SLIDE BY 30000  "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "COUNT"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Sample Written (Count)",
          "layout": {
            "column": 5,
            "row": 13,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(timeseries_write_samples), 1 SECONDS) As 'Sample Written' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance) TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "COUNT"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Errors (Count)",
          "layout": {
            "column": 9,
            "row": 13,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(timeseries_write_errors), 1 SECONDS) As 'Errors' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "COUNT"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        }
      ]
    },
    {
      "name": "SQL",
      "description": null,
      "widgets": [
        {
          "title": "Live SQL Connections",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(sql_conns) As 'Live SQL Connections' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance)  SINCE 60 MINUTES AGO UNTIL NOW Compare with 1 hour ago "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "SQL Statements (selected servers and instances)",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_select_count), 1 SECONDS) as 'Selects' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_insert_count), 1 SECONDS) AS Inserts FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_update_count), 1 SECONDS) As 'Updates' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_delete_count), 1 SECONDS) As 'Deletes' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_failure_count_count), 1 SECONDS) As 'Failures' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "SQL Statement Errors (selected servers and instances)",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_failure_count), 1 SECONDS) As 'Error Rate' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "SQL Byte Traffic (selected servers and instances)",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_bytesin), 1 SECONDS) AS 'Byte In' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_bytesout), 1 SECONDS)As 'Byte Out'FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 600000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transactions (selected servers and instances)",
          "layout": {
            "column": 7,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_txn_begin_count), 1 SECONDS) as 'Begins' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_txn_commit_count), 1 SECONDS) AS Commits FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_txn_rollback_count), 1 SECONDS) As 'Rollbacks' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sql_txn_abort_count), 1 SECONDS) As 'Aborts' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))   TIMESERIES 600000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## This section displays SQL metrics for your Cockroach Database. Use the `dimensions`  dashboard template variable to change the facet value for the widgets here."
          }
        },
        {
          "title": "SQL Memory",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(sql_mem_root_current) FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 Slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Open SQL Transactions",
          "layout": {
            "column": 7,
            "row": 8,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(sql_txns_open) FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})   LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Active SQL Statements",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT sum(sql_distsql_queries_active) As 'Active SQL Statements' FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})   LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "COUNT"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Schema Changes",
          "layout": {
            "column": 7,
            "row": 11,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT sum(sql_ddl_count) As 'Schema Changes' FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})  LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "COUNT"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 14,
            "width": 12,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## This section displays SQL metrics for your Cockroach Database. Use the  `percentile` dashboard template variable to change the percentile value for the widgets here."
          }
        },
        {
          "title": "Transactions Latency: (selected percentile) ",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT bucketpercentile(sql_txn_latency_bucket, {{percentile}})/1000000 FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})  LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": false
            }
          }
        },
        {
          "title": "Service Latency: SQL (selected percentile)",
          "layout": {
            "column": 5,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT bucketpercentile(sql_service_latency_bucket, {{percentile}})/1000000 As 'Service Latency' FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})   LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "MS"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "KV Execution Latency: (selected percentile)",
          "layout": {
            "column": 9,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT bucketpercentile(exec_latency_bucket, {{percentile}})/1000000 FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})   LIMIT 100 TIMESERIES 300000 SLIDE BY 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "MS"
            },
            "yAxisLeft": {
              "zero": false
            }
          }
        }
      ]
    },
    {
      "name": "Runtime",
      "description": null,
      "widgets": [
        {
          "title": "Active Nodes (Cluster)",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric \nSELECT latest(liveness_livenodes) as 'Active Instances'\nWHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) compare WITH 24 hour ago Facet cluster_name"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Replicas/Node",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(replicas) As 'Replicas Per Node' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET concat(prometheus_server,'-',instance) COMPARE WITH 1 day ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average Memory Usage (selected servers and instances)",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(sys_go_totalbytes) * cardinality(sys_go_totalbytes)) AS 'Memory managed by the Go layer' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 300000 slide by 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT (average(sys_go_allocbytes) * cardinality(sys_go_allocbytes)) As 'Memory allocated by the Go layer' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 300000 slide by 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT (average(sys_cgo_totalbytes) * cardinality(sys_cgo_totalbytes)) As 'Memory managed by the C layer' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 300000 slide by 30000"
              },
              {
                "accountId": 0,
                "query": "SELECT (average(sys_cgo_allocbytes) * cardinality(sys_cgo_allocbytes)) As 'Memory allocated by the C layer' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 300000 slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Garbage Collection Runs / Seconds (selected servers and instances)",
          "layout": {
            "column": 7,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(sys_gc_count) , 1 SECONDS)as 'Garbage Collection Run' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}}))  TIMESERIES 30000 "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## This section displays SQL metrics for your Cockroach Database. Use the `dimensions`  dashboard template variable to change the facet value for the widgets here."
          }
        },
        {
          "title": "Runnable Goroutines per CPU",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(sys_runnable_goroutines_per_cpu) FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 Slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Goroutine Count",
          "layout": {
            "column": 7,
            "row": 8,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(sys_goroutines)  As 'Goroutine Count' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 Slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": false
            }
          }
        },
        {
          "title": "GC Pause Time (seconds)",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT idelta(sys_gc_pause_ns)/1000000000 FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 \n"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Clock Offset",
          "layout": {
            "column": 5,
            "row": 11,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(clock_offset_meannanos)/1000000 FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 Slide by 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "units": {
              "unit": "MS"
            },
            "yAxisLeft": {
              "zero": false
            }
          }
        },
        {
          "title": "CPU Time (Nano Seconds) ",
          "layout": {
            "column": 9,
            "row": 11,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT idelta(sys_cpu_user_ns) As 'User' FROM Metric WHERE  (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write') AND (prometheus_server IN ({{prometheus_server}})) AND (instance IN ({{instance}})) FACET ({{dimensions}})    TIMESERIES 300000 "
              },
              {
                "accountId": 0,
                "query": "SELECT idelta(sys_cpu_sys_ns) As 'System' FROM Metric WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%') And (instrumentation.name='remote-write')  TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        }
      ]
    }
  ],
  "variables": [
    {
      "name": "prometheus_server",
      "items": null,
      "defaultValues": [
        {
          "value": {
            "string": "*"
          }
        }
      ],
      "nrqlQuery": {
        "accountIds": [],
        "query": "FROM Metric SELECT uniques(prometheus_server) WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%') AND (instrumentation.name = 'remote-write' AND metricName like 'timeseries_%' ) SINCE 1 WEEK AGO\n\n\n\n\n\n\n"
      },
      "title": "",
      "type": "NRQL",
      "isMultiSelection": true,
      "replacementStrategy": "STRING"
    },
    {
      "name": "instance",
      "items": null,
      "defaultValues": [
        {
          "value": {
            "string": "*"
          }
        }
      ],
      "nrqlQuery": {
        "accountIds": [],
        "query": "FROM Metric SELECT uniques(instance) WHERE (app_kubernetes_io_name LIKE '%cockroach%' or app_newrelic_com_name LIKE '%cockroach%' or k8s_app LIKE '%cockroach%' ) AND (instrumentation.name = 'remote-write')  AND (metricName like 'timeseries_%') SINCE 1 WEEK AGO\n\n\n"
      },
      "title": "",
      "type": "NRQL",
      "isMultiSelection": true,
      "replacementStrategy": "STRING"
    },
    {
      "name": "percentile",
      "items": [
        {
          "title": null,
          "value": "50"
        },
        {
          "title": null,
          "value": "75"
        },
        {
          "title": null,
          "value": "95"
        },
        {
          "title": null,
          "value": "99"
        }
      ],
      "defaultValues": [
        {
          "value": {
            "string": "95"
          }
        }
      ],
      "nrqlQuery": null,
      "title": "",
      "type": "ENUM",
      "isMultiSelection": false,
      "replacementStrategy": "NUMBER"
    },
    {
      "name": "dimensions",
      "items": [
        {
          "title": null,
          "value": "instance"
        },
        {
          "title": null,
          "value": "prometheus_server"
        },
        {
          "title": null,
          "value": "cluster_name"
        }
      ],
      "defaultValues": [
        {
          "value": {
            "string": "instance"
          }
        }
      ],
      "nrqlQuery": null,
      "title": "",
      "type": "ENUM",
      "isMultiSelection": false,
      "replacementStrategy": "IDENTIFIER"
    }
  ]
}