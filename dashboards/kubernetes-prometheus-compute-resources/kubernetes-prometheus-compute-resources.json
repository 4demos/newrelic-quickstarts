{
  "name": "Kubernetes / Compute Resources",
  "description": null,
  "pages": [
    {
      "name": "By Node",
      "description": null,
      "widgets": [
        {
          "title": "CPU Requests Commitment",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`), where true) /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Request Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Limits Commitment",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nsum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Limit Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Requests Commitment",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Limits Commitment",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Usage",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage'\nFROM Metric facet node, prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) as 'CPU Requests',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) * 100 as 'CPU Requests %',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) as 'CPU Limits',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) * 100 as 'CPU Limits %' \nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET node, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='' and image is not null) as 'Memory Usage'\nFROM Metric facet node, prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') as 'Memory Usage',\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Requests',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests %',\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Limits',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_limits), WHERE  (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits %'\nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET node, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec'\nFROM\n(\nSELECT\nirate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\nirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\nirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\nirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\nirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\nirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\nFROM Metric WHERE (((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor'))) FACET dimensions() limit max\n) SINCE 1 minute AGO UNTIL NOW FACET node, prometheus_server as 'Cluster' limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "IOPs (Reads + Writes)",
          "layout": {
            "column": 1,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ceil((average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`)))) FROM (SELECT rate(sum(container_fs_reads_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (((container != '' and container is not null)) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Throughput (Read + Write)",
          "layout": {
            "column": 7,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`))) FROM (SELECT rate(sum(container_fs_reads_bytes_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_bytes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (NOT ((container = '')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET node, prometheus_server LIMIT max TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Current Storage IO",
          "layout": {
            "column": 1,
            "row": 35,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nrate(sum(container_fs_reads_total), 1 SECONDS) as 'I/O Read Ops',\nrate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Write Ops',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Read + Write Ops',\nrate(sum(container_fs_reads_bytes_total), 1 SECONDS) as 'Throughput Reads',\nrate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Writes',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Reads + Writes'\nFROM Metric WHERE ((((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) AND (container != '' and container is not null)) SINCE 1 minute AGO UNTIL NOW FACET node, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        }
      ]
    },
    {
      "name": "By Cluster",
      "description": null,
      "widgets": [
        {
          "title": "CPU Requests Commitment",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`), where true) /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Request Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Limits Commitment",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nsum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Limit Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Requests Commitment",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Limits Commitment",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Usage",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage'\nFROM Metric facet prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) as 'CPU Requests',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) * 100 as 'CPU Requests %',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) as 'CPU Limits',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) * 100 as 'CPU Limits %' \nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='' and image is not null) as 'Memory Usage'\nFROM Metric facet prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') as 'Memory Usage',\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Requests',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests %',\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Limits',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_limits), WHERE  (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits %'\nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec'\nFROM\n(\nSELECT\nirate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\nirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\nirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\nirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\nirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\nirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\nFROM Metric WHERE (((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor'))) FACET dimensions() limit max\n) SINCE 1 minute AGO UNTIL NOW FACET prometheus_server limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "IOPs (Reads + Writes)",
          "layout": {
            "column": 1,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ceil((average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`)))) FROM (SELECT rate(sum(container_fs_reads_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (((container != '' and container is not null)) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Throughput (Read + Write)",
          "layout": {
            "column": 7,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`))) FROM (SELECT rate(sum(container_fs_reads_bytes_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_bytes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (NOT ((container = '')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET prometheus_server LIMIT max TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Current Storage IO",
          "layout": {
            "column": 1,
            "row": 35,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nrate(sum(container_fs_reads_total), 1 SECONDS) as 'I/O Read Ops',\nrate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Write Ops',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Read + Write Ops',\nrate(sum(container_fs_reads_bytes_total), 1 SECONDS) as 'Throughput Reads',\nrate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Writes',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Reads + Writes'\nFROM Metric WHERE ((((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) AND (container != '' and container is not null)) SINCE 1 minute AGO UNTIL NOW FACET prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        }
      ]
    },
    {
      "name": "By Namespace",
      "description": null,
      "widgets": [
        {
          "title": "CPU Requests Commitment",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`), where true) /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Request Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Limits Commitment",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nsum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Limit Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Requests Commitment",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Limits Commitment",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Usage",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage'\nFROM Metric facet namespace, prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) as 'CPU Requests',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) * 100 as 'CPU Requests %',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) as 'CPU Limits',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) * 100 as 'CPU Limits %' \nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='' and image is not null) as 'Memory Usage'\nFROM Metric facet namespace, prometheus_server since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') as 'Memory Usage',\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Requests',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests %',\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Limits',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_limits), WHERE  (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits %'\nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec'\nFROM\n(\nSELECT\nirate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\nirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\nirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\nirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\nirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\nirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\nFROM Metric WHERE (((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor'))) FACET dimensions() limit max\n) SINCE 1 minute AGO UNTIL NOW FACET namespace, prometheus_server as 'Cluster' limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "IOPs (Reads + Writes)",
          "layout": {
            "column": 1,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ceil((average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`)))) FROM (SELECT rate(sum(container_fs_reads_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (((container != '' and container is not null)) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Throughput (Read + Write)",
          "layout": {
            "column": 7,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`))) FROM (SELECT rate(sum(container_fs_reads_bytes_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_bytes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (NOT ((container = '')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET namespace, prometheus_server LIMIT max TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Current Storage IO",
          "layout": {
            "column": 1,
            "row": 35,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nrate(sum(container_fs_reads_total), 1 SECONDS) as 'I/O Read Ops',\nrate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Write Ops',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Read + Write Ops',\nrate(sum(container_fs_reads_bytes_total), 1 SECONDS) as 'Throughput Reads',\nrate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Writes',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Reads + Writes'\nFROM Metric WHERE ((((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) AND (container != '' and container is not null)) SINCE 1 minute AGO UNTIL NOW FACET namespace, prometheus_server LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        }
      ]
    },
    {
      "name": "By Pod",
      "description": null,
      "widgets": [
        {
          "title": "CPU Requests Commitment",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`), where true) /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Request Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Limits Commitment",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nsum(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'cpu') and job = 'kube-state-metrics') * 100 as 'CPU Limit Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Requests Commitment",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Limits Commitment",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') /\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits Commitment'\nFROM Metric since 1 minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "CPU Usage",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage'\nFROM Metric facet pod, namespace, prometheus_server as 'Cluster' since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) as 'CPU Usage',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) as 'CPU Requests',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests`)) * 100 as 'CPU Requests %',\n(average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) as 'CPU Limits',\n(average(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`) * cardinality(`node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate`)) / (average(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`) * cardinality(`cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits`)) * 100 as 'CPU Limits %' \nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='' and image is not null) as 'Memory Usage'\nFROM Metric facet pod, namespace, prometheus_server as 'Cluster' since 1 hour ago timeseries 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') as 'Memory Usage',\nfilter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Requests',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_requests), WHERE (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Requests %',\nfilter(sum(kube_pod_container_resource_limits), WHERE (resource = 'memory') and job = 'kube-state-metrics') as 'Memory Limits',\nfilter(sum(container_memory_working_set_bytes), WHERE job = 'kubelet' and container!= '' and container is not null and metrics_path='/metrics/cadvisor' and image!='') / filter(sum(kube_pod_container_resource_limits), WHERE  (resource = 'memory') and job = 'kube-state-metrics') * 100 as 'Memory Limits %'\nFROM Metric SINCE 1 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec'\nFROM\n(\nSELECT\nirate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\nirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\nirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\nirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\nirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\nirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\nFROM Metric WHERE (((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor'))) FACET dimensions() limit max\n) SINCE 1 minute AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "IOPs (Reads + Writes)",
          "layout": {
            "column": 1,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ceil((average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`)))) FROM (SELECT rate(sum(container_fs_reads_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (((container != '' and container is not null)) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT 100 TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Throughput (Read + Write)",
          "layout": {
            "column": 7,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`))) FROM (SELECT rate(sum(container_fs_reads_bytes_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_bytes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE (NOT ((container = '')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) FACET dimensions() LIMIT max TIMESERIES 60000 SLIDE BY 30000) SINCE 60 MINUTES AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT max TIMESERIES 30000"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Current Storage IO",
          "layout": {
            "column": 1,
            "row": 35,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT\nrate(sum(container_fs_reads_total), 1 SECONDS) as 'I/O Read Ops',\nrate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Write Ops',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Read + Write Ops',\nrate(sum(container_fs_reads_bytes_total), 1 SECONDS) as 'Throughput Reads',\nrate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Writes',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Reads + Writes'\nFROM Metric WHERE ((((job = 'kubelet') AND (metrics_path = '/metrics/cadvisor')) AND (device RLIKE '(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)')) AND (container != '' and container is not null)) SINCE 1 minute AGO UNTIL NOW FACET pod, namespace, prometheus_server as 'Cluster' LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        }
      ]
    },
    {
      "name": "Dashboard Filters",
      "description": null,
      "widgets": [
        {
          "title": "Filter by cluster (pod count)",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 8
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "from Metric  SELECT uniqueCount(pod) facet prometheus_server where prometheus_server!='' and prometheus_server is not null limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Filter by node (pod count)",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 4,
            "height": 8
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "from Metric  SELECT uniqueCount(pod) facet node where prometheus_server!='' and prometheus_server is not null limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Filter by namespace (pod count)",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 8
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "from Metric  SELECT uniqueCount(pod) facet namespace where prometheus_server!='' and prometheus_server is not null limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ],
  "variables": []
}