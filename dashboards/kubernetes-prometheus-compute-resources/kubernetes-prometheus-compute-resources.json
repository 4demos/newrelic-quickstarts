{
  "name": "Kubernetes / Compute Resources",
  "description": null,
  "permissions": "PUBLIC_READ_WRITE",
  "pages": [
    {
      "name": "By Node",
      "description": null,
      "widgets": [
        {
          "title": "Cluster-wide CPU Requests Commitment By Percentage",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide CPU Limits Commitment by Percentage",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Requests Commitment By Percentage",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Limits Commitment By Percentage",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Pod CPU Usage by Node (%)",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (FROM Metric SELECT rate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second)*100 as usage facet container, pod, instance, namespace, cluster_name where cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) timeseries 1 minute limit max) select sum(usage) facet instance timeseries 1 minute limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-wide CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n\trate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second) * 100 as 'CPU Usage (Pod Only)',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests)) as 'CPU Requests',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits)) as 'CPU Limits',\t\n\t(\n\t\t(sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests))) / \n\t\t(average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) *\n\t\t\tcardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable))\n\t\t)\n\t) * 100 as 'CPU Requests %',\n\t(\n\t\t(sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits))) / \n\t\t(average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) *\n\t\t\tcardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable))\n\t\t)\n\t) * 100 as 'CPU Limits %'\n\nFROM Metric WHERE cluster_name={{cluster}} \nSINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET if(node is not null, node, instance) as node LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage (Pod only)",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (SELECT average(conditional(WHERE container!='' and container is not null, container_memory_working_set_bytes)) as container_mem FROM Metric where cluster_name = {{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  facet container, instance, namespace, cluster_name, pod timeseries 1 minute limit max) select sum(container_mem) as 'Pod memory' timeseries 1 minute limit max facet instance"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-Wide Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Memory Limits",
                "type": "humanized"
              },
              {
                "name": "Memory Requests",
                "type": "humanized"
              },
              {
                "name": "Memory Usage",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT average(conditional(WHERE container != '' and container is not null, container_memory_working_set_bytes)) as 'Memory Usage (Pod Only)', \nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests)) as 'Memory Requests',\nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits)) as 'Memory Limits',\n((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Requests %', ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Limits %' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET if(node is not null, node, instance) as node LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec' FROM (\n\tSELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\n\tirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\n\tirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\n\tirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\n\tirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\n\tirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\n\tFROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  FACET dimensions() limit max\n) SINCE 2 Minutes ago UNTIL 1 Minute ago FACET instance limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) FACET dimensions() LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "IOPs (Reads + Writes)",
          "layout": {
            "column": 1,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ceil((average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`)))) FROM (SELECT rate(sum(container_fs_reads_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_total), 1 SECONDS) AS `__result_1` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Throughput (Read + Write)",
          "layout": {
            "column": 7,
            "row": 32,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average((`__result_0` + `__result_1`)) * cardinality((`__result_0` + `__result_1`))) FROM (SELECT rate(sum(container_fs_reads_bytes_total), 1 SECONDS) AS `__result_0`, rate(sum(container_fs_writes_bytes_total), 1 SECONDS) AS `__result_1` FROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) FACET dimensions() LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET instance LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Current Storage IO",
          "layout": {
            "column": 1,
            "row": 35,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT\nrate(sum(container_fs_reads_total), 1 SECONDS) as 'I/O Read Ops',\nrate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Write Ops',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_total), 1 SECONDS) as 'I/O Read + Write Ops',\nrate(sum(container_fs_reads_bytes_total), 1 SECONDS) as 'Throughput Reads',\nrate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Writes',\nrate(sum(container_fs_reads_total), 1 SECONDS) + rate(sum(container_fs_writes_bytes_total), 1 SECONDS) as 'Throughput Reads + Writes'\n\nFROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) SINCE 2 Minutes ago UNTIL 1 Minute ago FACET instance LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        }
      ]
    },
    {
      "name": "By Pod",
      "description": null,
      "widgets": [
        {
          "title": "Cluster-wide CPU Requests Commitment By Percentage",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide CPU Limits Commitment by Percentage",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Requests Commitment By Percentage",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Limits Commitment By Percentage",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Pod CPU Usage (%)",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (FROM Metric SELECT rate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second)*100 as usage facet container, pod, instance, namespace, cluster_name where cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) timeseries 1 minute limit max) select sum(usage) facet concat(namespace,'/',pod) timeseries 1 minute limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-wide CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n\trate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second) * 100 as 'CPU Usage',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests)) as 'CPU Requests',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits)) as 'CPU Limits'\nFROM Metric WHERE cluster_name={{cluster}} \nSINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET namespace,pod LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage (Pod only)",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (SELECT average(conditional(WHERE container!='' and container is not null, container_memory_working_set_bytes)) as container_mem FROM Metric where cluster_name = {{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  facet container, instance, namespace, cluster_name, pod timeseries 1 minute limit max) select sum(container_mem) as 'Pod memory' timeseries 1 minute limit max facet concat(namespace, '/', pod)"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-Wide Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Memory Limits",
                "type": "humanized"
              },
              {
                "name": "Memory Requests",
                "type": "humanized"
              },
              {
                "name": "Memory Usage",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT average(conditional(WHERE container != '' and container is not null, container_memory_working_set_bytes)) as 'Memory Usage (Pod Only)', \nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests)) as 'Memory Requests',\nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits)) as 'Memory Limits'\nFROM Metric WHERE cluster_name={{cluster}} SINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET namespace, pod LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec' FROM (\n\tSELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\n\tirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\n\tirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\n\tirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\n\tirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\n\tirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\n\tFROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  FACET dimensions() limit max\n) SINCE 2 Minutes ago UNTIL 1 Minute ago FACET namespace, pod limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) FACET dimensions() LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(pod is null, '', concat(namespace, '/', pod)) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    },
    {
      "name": "By Namespace",
      "description": null,
      "widgets": [
        {
          "title": "Cluster-wide CPU Requests Commitment By Percentage",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide CPU Limits Commitment by Percentage",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'cpu')), kube_node_status_allocatable)))) * 100 as 'CPU Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Requests Commitment By Percentage",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Requests Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Cluster-wide Memory Limits Commitment By Percentage",
          "layout": {
            "column": 10,
            "row": 1,
            "width": 3,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT ((sum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits))) / (average(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)) * cardinality(conditional(WHERE ((job = 'kube-state-metrics') AND (resource = 'memory')), kube_node_status_allocatable)))) * 100 as 'Memory Limits Commitment' FROM Metric WHERE cluster_name={{cluster}} SINCE 2 Minutes ago UNTIL 1 Minute ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Pod CPU Usage (%)",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (FROM Metric SELECT rate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second)*100 as usage facet container, pod, instance, namespace, cluster_name where cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) timeseries 1 minute limit max) select sum(usage) facet namespace timeseries 1 minute limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-wide CPU Quota",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n\trate(sum(conditional(WHERE container!='' and container is not null, container_cpu_usage_seconds_total)), 1 second) * 100 as 'CPU Usage',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_requests)) as 'CPU Requests',\n\tsum(conditional(WHERE resource = 'cpu', kube_pod_container_resource_limits)) as 'CPU Limits'\nFROM Metric WHERE cluster_name={{cluster}} \nSINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET namespace LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Memory Usage (Pod only)",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "From (SELECT average(conditional(WHERE container!='' and container is not null, container_memory_working_set_bytes)) as container_mem FROM Metric where cluster_name = {{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  facet container, instance, namespace, cluster_name, pod timeseries 1 minute limit max) select sum(container_mem) as 'Pod memory' timeseries 1 minute limit max facet namespace"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cluster-Wide Memory Quota",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Memory Limits",
                "type": "humanized"
              },
              {
                "name": "Memory Requests",
                "type": "humanized"
              },
              {
                "name": "Memory Usage",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT average(conditional(WHERE container != '' and container is not null, container_memory_working_set_bytes)) as 'Memory Usage (Pod Only)', \nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_requests)) as 'Memory Requests',\nsum(conditional(WHERE resource = 'memory', kube_pod_container_resource_limits)) as 'Memory Limits'\nFROM Metric WHERE cluster_name={{cluster}} SINCE 2 MINUTES AGO UNTIL 1 MINUTE AGO FACET namespace LIMIT max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Current Network Usage",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT \n(average(receiveBytes) * cardinality(receiveBytes)) as 'Receive bytes/sec',\n(average(transmitBytes) * cardinality(transmitBytes)) as 'Transmit bytes/sec',\n(average(receivePackets) * cardinality(receivePackets)) as 'Receive packets/sec',\n(average(transmitPackets) * cardinality(transmitPackets)) as 'Transmit packets/sec',\n(average(droppedReceivePackets) * cardinality(droppedReceivePackets)) as 'Dropped receive packets/sec',\n(average(droppedTransmitPackets) * cardinality(droppedTransmitPackets)) as 'Dropped transmit packets/sec' FROM (\n\tSELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS receiveBytes,\n\tirate(container_network_transmit_bytes_total, 1 SECONDS) AS transmitBytes,\n\tirate(container_network_receive_packets_total, 1 SECONDS) AS receivePackets,\n\tirate(container_network_transmit_packets_total, 1 SECONDS) AS transmitPackets,\n\tirate(container_network_receive_packets_dropped_total, 1 SECONDS) AS droppedReceivePackets,\n\tirate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS droppedTransmitPackets\n\tFROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  FACET dimensions() limit max\n) SINCE 2 Minutes ago UNTIL 1 Minute ago FACET namespace limit max"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": true
            }
          }
        },
        {
          "title": "Receive Bandwidth (per second)",
          "layout": {
            "column": 1,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) FACET dimensions() LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmit Bandwidth (per second)",
          "layout": {
            "column": 7,
            "row": 23,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_bytes_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets (per second)",
          "layout": {
            "column": 1,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets (per second)",
          "layout": {
            "column": 7,
            "row": 26,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Transmitted Packets Dropped (per second)",
          "layout": {
            "column": 1,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_transmit_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance) LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Received Packets Dropped (per second)",
          "layout": {
            "column": 7,
            "row": 29,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 11732014,
                "query": "SELECT (average(`__result_0`) * cardinality(`__result_0`)) FROM (SELECT irate(container_network_receive_packets_dropped_total, 1 SECONDS) AS `__result_0` FROM Metric FACET dimensions() WHERE cluster_name={{cluster}} and namespace=if({{namespace}} != '', {{namespace}}, namespace)  and instance=if({{node}} != '', {{node}}, instance)  LIMIT max TIMESERIES 1 minute) SINCE 60 MINUTES AGO UNTIL NOW FACET if(namespace is null, '', namespace) LIMIT max TIMESERIES 1 minute"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ],
  "variables": [
    {
      "name": "cluster",
      "items": null,
      "defaultValues": [],
      "nrqlQuery": {
        "accountIds": [
          11732014
        ],
        "query": "select uniques(cluster_name) from Metric limit max"
      },
      "title": "Cluster (Required)",
      "type": "NRQL",
      "isMultiSelection": false,
      "replacementStrategy": "STRING"
    },
    {
      "name": "node",
      "items": null,
      "defaultValues": [],
      "nrqlQuery": {
        "accountIds": [
          11732014
        ],
        "query": "select uniques(instance) from Metric limit max"
      },
      "title": "Node (Optional)",
      "type": "NRQL",
      "isMultiSelection": false,
      "replacementStrategy": "STRING"
    },
    {
      "name": "namespace",
      "items": null,
      "defaultValues": [],
      "nrqlQuery": {
        "accountIds": [
          11732014
        ],
        "query": "select uniques(namespace) from Metric limit max"
      },
      "title": "Namespace (Optional)",
      "type": "NRQL",
      "isMultiSelection": false,
      "replacementStrategy": "STRING"
    }
  ]
}